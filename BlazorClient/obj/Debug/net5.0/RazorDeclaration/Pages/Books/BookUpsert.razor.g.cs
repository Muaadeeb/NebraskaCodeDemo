// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorClient.Pages.Books
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using BlazorClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using BlazorClient.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using ModelDTOs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using BlazorClient.Services.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using BlazorClient.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\_Imports.razor"
using Blazored.TextEditor;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/book/create")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/book/edit/{Id:int}")]
    public partial class BookUpsert : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 108 "C:\Users\Owner\source\repos\NebraskaCodeDemo\BlazorClient\Pages\Books\BookUpsert.razor"
       

    [Parameter]
    public int? Id { get; set; }

    private BookDTO BookDto { get; set; } = new BookDTO();
    private string Title { get; set; } = "Create";

    public BlazoredTextEditor QuillHtml { get; set; } = new BlazoredTextEditor();


    protected async override Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Title = "Update";
            BookDto = (BookDTO)await _bookService.GetBookByBookIdAsync(Id.Value);
        }
        else
        {
            Title = "Create";
            BookDto = new BookDTO();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        bool loading = true;
        while (loading)
        {
            try
            {
                if (!string.IsNullOrEmpty(BookDto.Comments))
                {
                    await QuillHtml.LoadHTMLContent(BookDto.Comments);
                }

                loading = false;
            }
            catch
            {
                await Task.Delay(10);
                loading = true;
                
                await _jsRunTime.ToastrError("Possible issue with loading html text content - worry if you keep seeing this popup.");
            }
        }
    }

    private async Task HandleBookUpsert()
    {
        try
        {
            var result = await _bookService.GetBooksBySearchValueAsync(BookDto.Title);

            var bookTitle = result.FirstOrDefault(x => x.Title == BookDto.Title).Title;

            if (!string.IsNullOrEmpty(bookTitle))
            {
                await _jsRunTime.ToastrError("A book with this title already exisits.");
                return;
            }

            BookDto.Comments = await QuillHtml.GetHTML();
            if (BookDto.BookId != 0 && Title == "Update")
            {
                var updateResult = await _bookService.UpdateBookAsync(BookDto);

                if (updateResult == 0)
                {
                    await _jsRunTime.ToastrSuccess("Book updated successfully.");
                }
                else
                {
                    await _jsRunTime.ToastrSuccess("Something went wrong.  Book was not successfully updated, try again.");
                }

            }
            else
            {
                var createdResult = await _bookService.CreateBookAsync(BookDto);
                if (createdResult == 0)
                {
                    await _jsRunTime.ToastrSuccess("Book created successfully.");
                }
                else
                {
                    await _jsRunTime.ToastrSuccess("Something went wrong.  Book was not successfully created, try again.");
                }
            }
        }
        catch (Exception ex)
        {
            // log exception
        }

        _navigationManager.NavigateTo("book");
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime _jsRunTime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBookService _bookService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigationManager { get; set; }
    }
}
#pragma warning restore 1591
